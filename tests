
# Use an official Python runtime as a parent image
FROM python:3.12.2-slim

# Set the working directory in the container
WORKDIR /app

# Install system dependencies and Chrome
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    unzip \
    curl \
    libglib2.0-0 \
    libnss3 \
    libgconf-2-4 \
    libfontconfig1 \
    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list \
    && apt-get update \
    && apt-get install -y google-chrome-stable \
    && rm -rf /var/lib/apt/lists/*

# Install ChromeDriver
RUN CHROME_DRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE) \
    && wget -q -O /tmp/chromedriver.zip https://chromedriver.storage.googleapis.com/${CHROME_DRIVER_VERSION}/chromedriver_linux64.zip \
    && unzip /tmp/chromedriver.zip -d /usr/local/bin/ \
    && rm /tmp/chromedriver.zip \
    && chmod +x /usr/local/bin/chromedriver

# Create a non-root user
RUN useradd -m myuser

# Create NLTK data directory and set permissions
RUN mkdir -p /usr/local/share/nltk_data && chown -R myuser:myuser /usr/local/share/nltk_data

# Copy the current directory contents into the container at /app
COPY --chown=myuser:myuser . /app
COPY --chown=myuser:myuser .env /app/.env
COPY --chown=myuser:myuser richardson-sdet-genie-firebase-serviceAccountKey.json /app/

# Install any needed packages specified in requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Make port 8501 available to the world outside this container
EXPOSE 8501

# Define environment variable
ENV NAME SDET-Genie
ENV NLTK_DATA /usr/local/share/nltk_data

# Create Streamlit config to disable telemetry prompt
RUN mkdir -p /home/myuser/.streamlit
RUN echo "[browser]\nserverAddress = \"0.0.0.0\"\n\n[global]\nshowWarningOnDirectExecution = false\n" > /home/myuser/.streamlit/config.toml

# Switch to non-root user
USER myuser

# Run the application
CMD ["python", "-m", "streamlit", "run", "app.py", "--server.port=8501", "--server.address=0.0.0.0"]
